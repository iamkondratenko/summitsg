1598568944a:1:{s:17:"/site/payment.htm";a:5:{s:8:"fileName";s:17:"/site/payment.htm";s:7:"content";s:4368:"<div class="form-payment" >
    <h3 class="feedback-title">Опалата услуг</h3>
    <form class="feedback-modals_form">
        <label class="payment_label" for="paymentDocumentId">Введите номер договора</label>
        <input type="text" class="input-field documentId" id="paymentDocumentId">
        <label class="payment_label" for="paymentFio">ФИО заказчика</label>
        <input type="text" class="input-field fio" id="paymentFio">
        <label class="payment_label" for="paymentPhone">Ввидете телефон</label>
        <input type="text" class="input-field phone" id="paymentPhone">
        <label class="payment_label" for="paymentAddress">Введите адрес</label>
        <input type="text" class="input-field address" id="paymentAddress">
        <label class="payment_label" for="paymentTerm">Период оплаты</label>
        <input type="text" class="input-field paymentTerm" id="paymentTerm">
        <label class="payment_label" for="paymentSum">Сумма оплаты</label>
        <input type="text" class="input-field sum" id="paymentSum">
        <button id="sendingPaymentData" value="Оставить заявку" class="btn-lrg primary-button --unselectable">Оплатить</button>
    </form>
</div>

<style>
    .form-payment {
        padding: 60px 20%;
    }

    .payment_label {
        width: 70%;
    }
</style>

<script>

    document.getElementById('sendingPaymentData').addEventListener('click', sendingPaymentForm, false);
    let documentID = document.getElementById('paymentDocumentId')
    documentID.addEventListener('change', checkClientData, false);

    class PaymentData {
        constructor(paymentDocumentId, paymentFio, paymentPhone, paymentAddress, paymentTerm, paymentSum) {
            this.paymentDocumentId = paymentDocumentId;
            this.paymentFio = paymentFio;
            this.paymentPhone = paymentPhone;
            this.paymentAddress = paymentAddress;
            this.paymentTerm = paymentTerm;
            this.paymentSum = paymentSum;
        }

        static createNewPayment() {
            return new PaymentData(
                document.getElementById('paymentDocumentId'),
                document.getElementById('paymentFio'),
                document.getElementById('paymentPhone'),
                document.getElementById('paymentAddress'),
                document.getElementById('paymentTerm'),
                document.getElementById('paymentSum')
            )
        }

    }

    function sendingPaymentForm(e){
        e.preventDefault()
        let payment = PaymentData.createNewPayment()

        var data = JSON.stringify({
            "paymentDocumentId": payment.paymentSum.value,
            "paymentFio": payment.paymentFio.value,
            "paymentPhone": payment.paymentPhone.value,
            "paymentAddress": payment.paymentAddress.value,
            "paymentTerm": payment.paymentTerm.value,
            "paymentSum": payment.paymentSum.value,
        });

        var xhr = new XMLHttpRequest();
        xhr.withCredentials = true;

        xhr.addEventListener("readystatechange", function () {
            if (this.readyState === this.DONE) {
                console.log(this.responseText);
            }
        });

        xhr.open("POST", "/api/set-payment/");
        xhr.setRequestHeader("content-type", "application/json");

        xhr.send(data);
    }

    function checkClientData(){

        let payment = PaymentData.createNewPayment()
        var data = JSON.stringify({
            "paymentDocumentId": "test"
        });

        var xhr = new XMLHttpRequest();
        xhr.withCredentials = true;

        xhr.addEventListener("readystatechange", function () {
            if (this.readyState === this.DONE) {
                let result = JSON.parse(this.responseText);
                payment.paymentFio.value = result.paymentFio
                payment.paymentPhone.value = result.paymentPhone
                payment.paymentAddress.value = result.paymentAddress
                payment.paymentTerm.value = result.paymentTerm
                payment.paymentSum.value = result.paymentSum
            }
        });

        xhr.open("POST", "/api/check-client/");
        xhr.setRequestHeader("content-type", "application/json");

        xhr.send(data);}
</script>";s:5:"mtime";i:1598567773;s:6:"markup";s:4368:"<div class="form-payment" >
    <h3 class="feedback-title">Опалата услуг</h3>
    <form class="feedback-modals_form">
        <label class="payment_label" for="paymentDocumentId">Введите номер договора</label>
        <input type="text" class="input-field documentId" id="paymentDocumentId">
        <label class="payment_label" for="paymentFio">ФИО заказчика</label>
        <input type="text" class="input-field fio" id="paymentFio">
        <label class="payment_label" for="paymentPhone">Ввидете телефон</label>
        <input type="text" class="input-field phone" id="paymentPhone">
        <label class="payment_label" for="paymentAddress">Введите адрес</label>
        <input type="text" class="input-field address" id="paymentAddress">
        <label class="payment_label" for="paymentTerm">Период оплаты</label>
        <input type="text" class="input-field paymentTerm" id="paymentTerm">
        <label class="payment_label" for="paymentSum">Сумма оплаты</label>
        <input type="text" class="input-field sum" id="paymentSum">
        <button id="sendingPaymentData" value="Оставить заявку" class="btn-lrg primary-button --unselectable">Оплатить</button>
    </form>
</div>

<style>
    .form-payment {
        padding: 60px 20%;
    }

    .payment_label {
        width: 70%;
    }
</style>

<script>

    document.getElementById('sendingPaymentData').addEventListener('click', sendingPaymentForm, false);
    let documentID = document.getElementById('paymentDocumentId')
    documentID.addEventListener('change', checkClientData, false);

    class PaymentData {
        constructor(paymentDocumentId, paymentFio, paymentPhone, paymentAddress, paymentTerm, paymentSum) {
            this.paymentDocumentId = paymentDocumentId;
            this.paymentFio = paymentFio;
            this.paymentPhone = paymentPhone;
            this.paymentAddress = paymentAddress;
            this.paymentTerm = paymentTerm;
            this.paymentSum = paymentSum;
        }

        static createNewPayment() {
            return new PaymentData(
                document.getElementById('paymentDocumentId'),
                document.getElementById('paymentFio'),
                document.getElementById('paymentPhone'),
                document.getElementById('paymentAddress'),
                document.getElementById('paymentTerm'),
                document.getElementById('paymentSum')
            )
        }

    }

    function sendingPaymentForm(e){
        e.preventDefault()
        let payment = PaymentData.createNewPayment()

        var data = JSON.stringify({
            "paymentDocumentId": payment.paymentSum.value,
            "paymentFio": payment.paymentFio.value,
            "paymentPhone": payment.paymentPhone.value,
            "paymentAddress": payment.paymentAddress.value,
            "paymentTerm": payment.paymentTerm.value,
            "paymentSum": payment.paymentSum.value,
        });

        var xhr = new XMLHttpRequest();
        xhr.withCredentials = true;

        xhr.addEventListener("readystatechange", function () {
            if (this.readyState === this.DONE) {
                console.log(this.responseText);
            }
        });

        xhr.open("POST", "/api/set-payment/");
        xhr.setRequestHeader("content-type", "application/json");

        xhr.send(data);
    }

    function checkClientData(){

        let payment = PaymentData.createNewPayment()
        var data = JSON.stringify({
            "paymentDocumentId": "test"
        });

        var xhr = new XMLHttpRequest();
        xhr.withCredentials = true;

        xhr.addEventListener("readystatechange", function () {
            if (this.readyState === this.DONE) {
                let result = JSON.parse(this.responseText);
                payment.paymentFio.value = result.paymentFio
                payment.paymentPhone.value = result.paymentPhone
                payment.paymentAddress.value = result.paymentAddress
                payment.paymentTerm.value = result.paymentTerm
                payment.paymentSum.value = result.paymentSum
            }
        });

        xhr.open("POST", "/api/check-client/");
        xhr.setRequestHeader("content-type", "application/json");

        xhr.send(data);}
</script>";s:4:"code";N;}}